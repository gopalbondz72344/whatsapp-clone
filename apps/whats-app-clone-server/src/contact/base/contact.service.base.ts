/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Contact as PrismaContact } from "@prisma/client";

export class ContactServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ContactCountArgs, "select">): Promise<number> {
    return this.prisma.contact.count(args);
  }

  async contacts<T extends Prisma.ContactFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactFindManyArgs>
  ): Promise<PrismaContact[]> {
    return this.prisma.contact.findMany<Prisma.ContactFindManyArgs>(args);
  }
  async contact<T extends Prisma.ContactFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactFindUniqueArgs>
  ): Promise<PrismaContact | null> {
    return this.prisma.contact.findUnique(args);
  }
  async createContact<T extends Prisma.ContactCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactCreateArgs>
  ): Promise<PrismaContact> {
    return this.prisma.contact.create<T>(args);
  }
  async updateContact<T extends Prisma.ContactUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactUpdateArgs>
  ): Promise<PrismaContact> {
    return this.prisma.contact.update<T>(args);
  }
  async deleteContact<T extends Prisma.ContactDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ContactDeleteArgs>
  ): Promise<PrismaContact> {
    return this.prisma.contact.delete(args);
  }
}
